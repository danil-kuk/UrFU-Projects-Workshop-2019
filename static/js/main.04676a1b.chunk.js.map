{"version":3,"sources":["assets/placeholder.svg","assets/logo.svg","assets/data/Итоговая визуализация.svg","assets/courses-icons/3d-modeling.svg","assets/courses-icons/broadcast.svg","assets/courses-icons/chat-bubbles-with-ellipsis.svg","assets/courses-icons/chip.svg","assets/courses-icons/gamepad-controller.svg","assets/courses-icons/internet.svg","assets/courses-icons/machine-learning.svg","assets/courses-icons/mechanical-arm.svg","assets/courses-icons/smartphone.svg","assets/courses-icons/virtual-reality.svg","assets/competencies-icons/team.svg","assets/competencies-icons/manager.svg","assets/competencies-icons/analyst.svg","assets/competencies-icons/developer.svg","assets/competencies-icons/designer.svg","assets/competencies-icons/artist.svg","assets/competencies-icons/tester.svg","assets/competencies-icons/explorer.svg","components/Navbar.js","pages/Home.js","components/Timeline.js","pages/Chronology.js","components/PieChart.js","components/SunburstChart.js","pages/Students.js","components/CuratorsGraph.js","components/CoursesIcons.js","components/ArrayShuffle.js","components/CuratorCard.js","components/CuratorsBoard.js","pages/Curators.js","components/CustomerCard.js","components/CustomersBoard.js","components/ChordDiagram.js","pages/Customers.js","components/CirclePackingDiagram.js","components/HorizontalBarChart.js","components/WaffleChart.js","pages/CoursesDiagrams.js","components/CoursesButtonsRow.js","components/ProjectCard.js","components/ProjectsCardsBoard.js","pages/CoursesDescription.js","components/CompetenciesIcons.js","components/CompetenciesButtonsRow.js","components/CompetenciesGraph.js","pages/Сompetencies.js","components/RadarDiagram.js","components/RadarDataPreparation.js","pages/PrePresentation.js","pages/Presentation.js","pages/TeamsResults.js","components/SwarmPlot.js","pages/CoursesResults.js","App.js","index.js"],"names":["module","exports","Navbar","className","to","src","logo","alt","id","Component","Home","img","MyTimeline","props","lineColor","data","map","element","elemColor","color","key","date","title","dateText","style","dateStyle","left","dateInnerStyle","background","fontSize","content","Chronology","Timeline","tlData","Chart","height","margin","top","right","bottom","startAngle","endAngle","innerRadius","padAngle","colors","colorScheme","borderWidth","borderColor","from","modifiers","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","animate","motionStiffness","motionDamping","theme","labels","text","fontFamily","MyResponsiveSunburst","identity","value","cornerRadius","childColor","isInteractive","Students","PieChart","gender","scheme","course","SunburstChart","groups","CuratorsGraph","state","network","graph","options","layout","hierarchical","autoResize","edges","arrows","middle","smooth","enabled","type","scaling","min","max","inherit","opacity","chosen","edge","values","width","nodes","font","face","shape","label","node","interaction","hover","physics","forceAtlas2Based","gravitationalConstant","centralGravity","springConstant","springLength","damping","avoidOverlap","solver","stabilization","iterations","updateInterval","onlyDynamicEdges","fit","events","hoverNode","param","this","setState","getNetwork","handleNetworkChange","React","iconHolder","icon","CoursesIcons","icon7","icon5","icon3","icon8","icon2","icon10","icon6","icon9","icon4","icon1","icon0","arrayShuffle","a","i","length","j","Math","floor","random","CuratorCard","name","img_link","onError","target","display","org","activity","degree","projects_count","Shuffle","courses","c","CuratorsBoard","p","Curators","graphData","infoData","CustomerCard","href","link","rel","org_type","activity_type","org_size","org_place","CustomersBoard","MyResponsiveChordCanvas","matrix","keys","innerRadiusRatio","innerRadiusOffset","arcOpacity","arcBorderWidth","arcBorderColor","ribbonOpacity","ribbonBorderWidth","ribbonBorderColor","enableLabel","labelOffset","labelRotation","labelTextColor","arcHoverOpacity","arcHoverOthersOpacity","ribbonHoverOpacity","ribbonHoverOthersOpacity","ribbonTooltip","ribbon","padding","borderRadius","alignItems","justifyContent","flexDirection","boxShadow","source","CustomersInfo","ChordDiagram","CirclePackingDiagram","root","fill","match","depth","MyResponsiveBar","indexBy","axisTop","axisRight","enableGridY","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","tickValues","axisLeft","labelSkipWidth","labelSkipHeight","tooltip","indexValue","axis","ticks","MyResponsiveWaffle","total","rows","columns","CoursesDiagrams","cpdData","HorizontalBarChart","hbcData","WaffleChart","wcData","coursesData","push","CoursesButtonsRow","selectedCourse","onChangeValue","args","toString","parent","ButtonWithIcon","onClick","handleClick","bind","Card","description","Board","CoursesDescription","Object","onChangeValueHandler","val","textAlign","marginBottom","ProjectsCardsBoard","projectsData","CompetenciesIcons","competenciesData","CompetenciesButtonsRow","selected","k","selectedItem","CompetenciesGraph","setData","groupKeys","forEach","groupKey","Сompetencies","selectedKey","courseInfo","MyResponsiveRadar","dataKeys","maxValue","curve","gridLevels","levels","gridShape","gridLabelOffset","enableDots","dotSize","dotColor","dotBorderWidth","dotBorderColor","enableDotLabel","dotLabel","dotLabelYOffset","fillOpacity","blendMode","labelsFontSize","dots","grid","line","stroke","strokeWidth","dataPreparation","allKeys","newData","array","measure","slice","DataPreparation","PrePresentation","RadarDiagram","Presentation","expertsData","e","radarData","concat","sort","handleChange","event","onChange","multiple","team","selectedTeam","item","teamsInfo","score","project","track","curator","members_count","teamInfo","courses_count","curators_count","teams_count","generalInfo","MyResponsiveSwarmPlot","valueScale","reverse","size","sizes","forceStrength","spacing","gap","enableGridX","simulationIterations","orient","team_name","strokeDasharray","sourceData","index","courseId","teamId","group","members","CoursesResults","SwarmPlot","App","basename","process","exact","path","component","Customers","TeamsResults","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04676a1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder.431523db.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.e491f584.svg\";","module.exports = __webpack_public_path__ + \"static/media/Итоговая визуализация.d6714a1c.svg\";","module.exports = __webpack_public_path__ + \"static/media/3d-modeling.ef500ecf.svg\";","module.exports = __webpack_public_path__ + \"static/media/broadcast.e4ca3f04.svg\";","module.exports = __webpack_public_path__ + \"static/media/chat-bubbles-with-ellipsis.303b9a7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/chip.2dbbdde5.svg\";","module.exports = __webpack_public_path__ + \"static/media/gamepad-controller.0a493a7a.svg\";","module.exports = __webpack_public_path__ + \"static/media/internet.5c1a3229.svg\";","module.exports = __webpack_public_path__ + \"static/media/machine-learning.5e8660ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/mechanical-arm.76376853.svg\";","module.exports = __webpack_public_path__ + \"static/media/smartphone.431d53aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/virtual-reality.f1e8dd5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/team.93cb39e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/manager.6aa4f844.svg\";","module.exports = __webpack_public_path__ + \"static/media/analyst.8db2b282.svg\";","module.exports = __webpack_public_path__ + \"static/media/developer.6e12f4b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/designer.d11a3aac.svg\";","module.exports = __webpack_public_path__ + \"static/media/artist.0b9efa46.svg\";","module.exports = __webpack_public_path__ + \"static/media/tester.fe61cde4.svg\";","module.exports = __webpack_public_path__ + \"static/media/explorer.0be88471.svg\";","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport '../styles/Navbar.css'\nimport logo from '../assets/logo.svg'\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div className='navbar-container'>\n        <div className='logo-holder'>\n          <Link to='/'>\n            <img src={logo} alt='Logo' id='logo' />\n          </Link>\n        </div>\n        <div className='nav-holder'>\n          <Link to='/'>Главная</Link>\n          <Link to='/chronology'>Хронология</Link>\n          <div className='dropdown'>\n            <Link to='/customers' className='dropbtn'>\n              Участники\n            </Link>\n            <div className='dropdown-content'>\n              <Link to='/customers'>Заказчики</Link>\n              <Link to='/students'>Студенты</Link>\n              <Link to='/curators'>Кураторы</Link>\n            </div>\n          </div>\n          <div className='dropdown'>\n            <Link to='/courses-description' className='dropbtn'>\n              Проекты\n            </Link>\n            <div className='dropdown-content'>\n              <Link to='/courses-description'>Направления</Link>\n              <Link to='/courses-diagrams'>Диаграммы</Link>\n              <Link to='/pre-presentation'>Предзащиты</Link>\n            </div>\n          </div>\n          <Link to='/competencies'>Компетенции</Link>\n          <div className='dropdown'>\n            <Link to='/presentation' className='dropbtn'>\n              Итоги\n            </Link>\n            <div className='dropdown-content'>\n              <Link to='/presentation'>Защиты</Link>\n              <Link to='/teams-results'>Оценки</Link>\n              <Link to='/courses-results'>Диаграмма</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Navbar\n","import React from 'react'\nimport img from '../assets/data/Итоговая визуализация.svg'\n\nconst Home = () => {\n  return (\n    <div className='container'>\n      <div className='main-diagram-holder'>\n        <img alt='diagram' src={img}></img>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react'\nimport '../styles/Diagrams.css'\n\nconst MyTimeline = (props) => (\n  <div>\n    <Timeline lineColor={'#C8CED7'} className='pw-timeline'>\n      {props.data.map(element => {\n        const elemColor = element.color != null ? element.color : '#6BAED6'\n        return (\n          <TimelineItem\n            key={element.date + element.title}\n            dateText={element.date}\n            style={{ color: elemColor }}\n            dateStyle={{\n              left: 12\n            }}\n            dateInnerStyle={{\n              background: elemColor,\n              fontSize: 18\n            }}\n          >\n            <h3>{element.title}</h3>\n            <p>{element.content}</p>\n          </TimelineItem>\n        )\n      })}\n    </Timeline>\n  </div>\n)\n\nexport default MyTimeline","import React from 'react'\nimport tlData from '../assets/data/Timeline-data.json'\nimport Timeline from '../components/Timeline'\n\nconst Chronology = () => {\n  return (\n    <div className='container'>\n      <h1>Хронология</h1>\n      <Timeline data={tlData} />\n    </div>\n  )\n}\n\nexport default Chronology","import React from 'react'\nimport { ResponsivePie } from '@nivo/pie'\n\nconst Chart = (props) => {\n  return (\n    <div className='pie-chart-holder' style={{ height: props.height }}>\n      <ResponsivePie\n        data={props.data}\n        margin={{ top: 20, right: 20, bottom: 40, left: 20 }}\n        startAngle={props.startAngle}\n        endAngle={props.endAngle}\n        innerRadius={0.45}\n        padAngle={1.5}\n        colors={props.colorScheme}\n        borderWidth={1}\n        borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\n        radialLabelsSkipAngle={10}\n        radialLabelsTextXOffset={4}\n        radialLabelsTextColor='#333333'\n        radialLabelsLinkOffset={0}\n        radialLabelsLinkDiagonalLength={13}\n        radialLabelsLinkHorizontalLength={10}\n        radialLabelsLinkStrokeWidth={3}\n        radialLabelsLinkColor={{ from: 'color' }}\n        slicesLabelsSkipAngle={10}\n        slicesLabelsTextColor='#333333'\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n        theme={{\n          labels: {\n            text: {\n              fontSize: 22,\n              fontFamily: ''\n            }\n          }\n        }}\n      />\n    </div>\n  )\n}\n\nexport default Chart","import React from 'react'\nimport { ResponsiveSunburst } from '@nivo/sunburst'\nimport '../styles/Diagrams.css'\n\nconst MyResponsiveSunburst = (props) => (\n  <div className='sunburst-chart-holder'>\n    <ResponsiveSunburst\n      data={props.data}\n      margin={{ top: 40, right: 20, bottom: 20, left: 20 }}\n      identity='name'\n      value='value'\n      cornerRadius={0}\n      borderWidth={1.5}\n      borderColor='#D8E0EC'\n      colors={['#F47560', '#E8C1A0']}\n      childColor={{ from: 'color' }}\n      animate={true}\n      motionStiffness={90}\n      motionDamping={15}\n      isInteractive={true}\n    />\n  </div>\n)\n\nexport default MyResponsiveSunburst","import React from 'react'\nimport data from '../assets/data/Students-data.json'\nimport PieChart from '../components/PieChart'\nimport SunburstChart from '../components/SunburstChart'\n\nconst Students = () => {\n  return (\n    <div className='container'>\n      <h1>Студенты</h1>\n      <div className='students-diagrams-holder'>\n        <div>\n          <PieChart data={data.gender} colorScheme={{ scheme: 'pastel1' }} />\n          <h2>Рапределение по полу</h2>\n        </div>\n        <div>\n          <PieChart data={data.course} colorScheme={['#E8C1A0', '#F47560']}\n            startAngle={-90}\n            endAngle={90}\n            height={320}\n          />\n          <h2>Рапределение по курсу</h2>\n        </div>\n      </div>\n      <div>\n        <SunburstChart data={data.groups} />\n        <h2>Распределение по группам</h2>\n      </div>\n    </div>\n  )\n}\n\nexport default Students\n","import React from 'react'\nimport Graph from 'react-graph-vis'\nimport '../styles/CuratorsGraph.css'\nimport '../styles/Diagrams.css'\n\nclass CuratorsGraph extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      network: null\n    }\n    this.graph = props.data\n    this.options = {\n      layout: {\n        hierarchical: false\n      },\n      autoResize: true,\n      edges: {\n        arrows: { from: false, middle: false, to: false },\n        smooth: {\n          enabled: true,\n          type: 'continuous'\n        },\n        scaling: {\n          min: 3,\n          max: 8\n        },\n        color: { inherit: 'to', opacity: 0.5 },\n        chosen: {\n          edge: function(values /*, id, selected, hovering */) {\n            values.opacity = 1\n            values.width += 3\n          }\n        }\n      },\n      nodes: {\n        font: { face: 'Bahnschrift' },\n        shape: 'dot',\n        scaling: {\n          label: {\n            enabled: true,\n            min: 14,\n            max: 20\n          }\n        },\n        borderWidth: 0,\n        chosen: {\n          node: function(values /*, id, selected, hovering */) {\n            values.borderColor = values.color\n            values.borderWidth = 5\n          }\n        }\n      },\n      interaction: {\n        hover: true\n      },\n      physics: {\n        enabled: true,\n        forceAtlas2Based: {\n          gravitationalConstant: -50,\n          centralGravity: 0.01,\n          springConstant: 0.005,\n          springLength: 100,\n          damping: 0.7,\n          avoidOverlap: 1\n        },\n        solver: 'forceAtlas2Based',\n        stabilization: {\n          enabled: true,\n          iterations: 1000,\n          updateInterval: 100,\n          onlyDynamicEdges: false,\n          fit: true\n        }\n      }\n    }\n\n    this.events = {\n      /* select: function(event) {\n        var { nodes, edges } = event;\n      }, */\n      hoverNode: function(/* params */) {}\n    }\n  }\n\n  handleNetworkChange(param) {\n    this.setState((/* state */) => ({\n      network: param\n    }))\n  }\n\n  render() {\n    return (\n      <div className='curators-graph-holder'>\n        <Graph\n          graph={this.graph}\n          options={this.options}\n          events={this.events}\n          getNetwork={network => {\n            this.handleNetworkChange(network)\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default CuratorsGraph\n","import React from 'react'\nimport icon1 from '../assets/courses-icons/3d-modeling.svg'\nimport icon2 from '../assets/courses-icons/broadcast.svg'\nimport icon3 from '../assets/courses-icons/chat-bubbles-with-ellipsis.svg'\nimport icon4 from '../assets/courses-icons/chip.svg'\nimport icon5 from '../assets/courses-icons/gamepad-controller.svg'\nimport icon6 from '../assets/courses-icons/internet.svg'\nimport icon7 from '../assets/courses-icons/machine-learning.svg'\nimport icon8 from '../assets/courses-icons/mechanical-arm.svg'\nimport icon9 from '../assets/courses-icons/smartphone.svg'\nimport icon10 from '../assets/courses-icons/virtual-reality.svg'\nimport icon0 from '../assets/placeholder.svg'\nimport '../styles/index.css'\n\nconst CoursesIcons = (props) => {\n  switch (props.icon) {\n    case 'machine-learning':\n      return iconHolder(icon7)\n    case 'games':\n      return iconHolder(icon5)\n    case 'bots':\n      return iconHolder(icon3)\n    case 'robots':\n      return iconHolder(icon8)\n    case 'digital-marketing':\n      return iconHolder(icon2)\n    case 'vr':\n      return iconHolder(icon10)\n    case 'web-development':\n      return iconHolder(icon6)\n    case 'mobile':\n      return iconHolder(icon9)\n    case 'information-systems':\n      return iconHolder(icon4)\n    case 'math-modelling':\n      return iconHolder(icon1)\n\n    default:\n      return iconHolder(icon0)\n  }\n}\n\nfunction iconHolder(icon) {\n  return (\n    <div className='icon-holder'>\n      <img alt='icon' src={icon}></img>\n    </div>\n  )\n}\n\nexport default CoursesIcons","function arrayShuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]]\n  }\n  return a\n}\n\nexport default arrayShuffle","import React from 'react'\nimport '../styles/CuratorCard.css'\nimport CoursesIcons from './CoursesIcons'\nimport Shuffle from './ArrayShuffle'\n\nconst CuratorCard = (props) => {\n  return (\n    <div className='curator-card'>\n      <h4>{props.name}</h4>\n      <div className='curator-info'>\n        <div className='img-holder'>\n          <img\n            src={props.img_link}\n            alt='Лого'\n            onError={(i) => {\n              i.target.style.display = 'none'\n            }}\n          ></img>\n        </div>\n        <div className='curator-info-text'>\n          <p>\n            <b>Организация: </b>\n            {props.org} <br />\n            {props.activity !== '' && (\n              <>\n                <b>Деятельность: </b> {props.activity} <br />\n              </>\n            )}\n            {props.degree !== '' && (\n              <>\n                <b>Ученая степень: </b> {props.degree} <br />\n              </>\n            )}\n            <b>Проектов: </b>\n            {props.projects_count} <br />\n            <b>Направления: </b>\n          </p>\n\n          <div className='courses'>\n            {Shuffle(props.courses).map((c) => (\n              <CoursesIcons icon={c} key={props.org + c} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CuratorCard\n","import React from 'react'\nimport '../styles/Boards.css'\nimport CuratorCard from './CuratorCard'\n// import Shuffle from './ArrayShuffle'\n\nconst CuratorsBoard = (props) => {\n  return (\n    <div className='curators-cards-board'>\n      {props.data.map(p => (\n        <CuratorCard\n          name={p.name}\n          org={p.org}\n          activity={p.activity}\n          degree={p.degree}\n          img_link={p.img_link}\n          projects_count={p.projects_count}\n          courses={p.courses}\n          key={p.name}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default CuratorsBoard","import React from 'react'\nimport CuratorsGraph from '../components/CuratorsGraph.js'\nimport graphData from '../assets/data/CuratorsGraph-data.json'\nimport CuratorsBoard from '../components/CuratorsBoard.js'\nimport infoData from '../assets/data/CuratorsInfo-data.json'\n\nconst Curators = () => {\n  return (\n    <div className='container'>\n      <h1>Кураторы</h1>\n      <CuratorsGraph data={graphData} />\n      <h2>Информация</h2>\n      <CuratorsBoard data={infoData} />\n    </div>\n  )\n}\n\nexport default Curators","import React from 'react'\nimport '../styles/CustomerCard.css'\nimport CoursesIcons from './CoursesIcons'\nimport Shuffle from './ArrayShuffle'\n\nconst CustomerCard = (props) => {\n  return (\n    <a href={props.link} target='_blank' rel='noopener noreferrer'>\n      <div className='customer-card'>\n        <div className='card-title'>\n          <div className='img-holder'>\n            <img src={props.img_link} alt='Лого' onError={i => { i.target.style.display = 'none' } }></img>\n          </div>\n          <h4>{props.title}</h4>\n        </div>\n        <div className='customer-info'>\n          <p>\n            <b>Тип организации: </b>{props.org_type} <br />\n            <b>Область деятельности: </b>{props.activity_type} <br />\n            <b>Размер организации: </b>{props.org_size} <br />\n            <b>Расположение: </b>{props.org_place} <br />\n            <b>Направления: </b>\n          </p>\n        </div>\n        <div className='courses'>\n          {Shuffle(props.courses).map(c => (\n            <CoursesIcons\n              icon={c}\n              key={props.org_type + c}\n            />\n          ))}\n        </div>\n      </div>\n    </a>\n  )\n}\n\nexport default CustomerCard","import React from 'react'\nimport '../styles/Boards.css'\nimport CustomerCard from './CustomerCard'\nimport Shuffle from './ArrayShuffle'\n\nconst CustomersBoard = (props) => {\n  return (\n    <div className='customers-cards-board'>\n      {Shuffle(props.data).map(p => (\n        <CustomerCard\n          title={p.title}\n          org_type={p.org_type}\n          activity_type={p.activity_type}\n          org_size={p.org_size}\n          img_link={p.img_link}\n          org_place={p.org_place}\n          courses={p.courses}\n          link={p.link}\n          key={p.title}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default CustomersBoard","import React from 'react'\nimport { ResponsiveChord } from '@nivo/chord'\nimport '../styles/Diagrams.css'\n\nconst MyResponsiveChordCanvas = (props) => (\n  <div className='chord-diagram-holder'>\n    <ResponsiveChord\n      matrix={props.matrix}\n      keys={[\n        'Машин. обучение', 'Боты', 'Инф. системы', 'VR/AR', 'Моб. разработка',\n        'Игры', 'Мат. моделирование', 'Робототехника', 'Web-разработка', 'Цифр. маркетинг',\n        'УрФУ', 'iRidium', 'НПОА', 'Сервис-Газиф.', 'Мор. Комп. с-мы',\n        'UGA', 'УГМУ', 'Лаб. Будущего', 'Косм. монитор.', 'Демогр. исслед.',\n        'Азб. Дет. Счастья', 'Naumen', 'Смартпроект'\n      ]}\n      margin={{ top: 100, right: 60, bottom: 100, left: 60 }}\n      padAngle={0.05}\n      innerRadiusRatio={0.98}\n      innerRadiusOffset={0}\n      arcOpacity={1}\n      arcBorderWidth={1}\n      arcBorderColor={{ from: 'color', modifiers: [['darker', 0.4]] }}\n      ribbonOpacity={0.5}\n      ribbonBorderWidth={1}\n      ribbonBorderColor={{ from: 'color', modifiers: [['darker', 0.6]] }}\n      enableLabel={true}\n      label='id'\n      labelOffset={4}\n      labelRotation={-90}\n      labelTextColor={{ from: 'color', modifiers: [['darker', 1.5]] }}\n      colors={{ scheme: 'spectral' }}\n      isInteractive={true}\n      arcHoverOpacity={1}\n      arcHoverOthersOpacity={0.25}\n      ribbonHoverOpacity={0.75}\n      ribbonHoverOthersOpacity={0.15}\n      animate={true}\n      motionStiffness={90}\n      motionDamping={10}\n      ribbonTooltip={({ ribbon }) => {\n        return (\n          <div style={{\n            background: 'white',\n            padding: '5px 9px',\n            borderRadius: '2px',\n            display: 'flex-inline',\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            color: 'black',\n            boxShadow: 'rgba(0, 0, 0, 0.25) 0px 1px 2px'\n          }}>\n                        Проектов: <b>{ribbon.source.value}</b>\n          </div>\n        )\n      }\n      }\n      theme={{\n        labels: {\n          text: {\n            fontSize: 14,\n            fontFamily: ''\n          }\n        }\n      }}\n    />\n  </div>\n)\n\nexport default MyResponsiveChordCanvas","import React from 'react'\nimport CustomersBoard from '../components/CustomersBoard'\nimport ChordDiagram from '../components/ChordDiagram'\nimport data from '../assets/data/CustomersInfo-data.json'\nimport matrix from '../assets/data/ChordDiagram-matrix.json'\n\nconst CustomersInfo = () => {\n  return (\n    <div className='container'>\n      <h1>Заказчики</h1>\n      <ChordDiagram matrix={matrix}/>\n      <h2>Информация</h2>\n      <CustomersBoard data={data}/>\n    </div>\n  )\n}\n\nexport default CustomersInfo\n","import React from 'react'\nimport { ResponsiveBubble } from '@nivo/circle-packing'\nimport '../styles/Diagrams.css'\n\nconst CirclePackingDiagram = (props) => (\n  <div className='circle-parcking-holder'>\n    <ResponsiveBubble\n      root={props.data}\n      margin={{ top: 10, right: 20, bottom: 20, left: 20 }}\n      identity='name'\n      value='value'\n      colors={{ scheme: 'blues' }}\n      padding={6}\n      label='value'\n      labelTextColor={{ from: 'color', modifiers: [['darker', 2]] }}\n      borderWidth={2}\n      borderColor={{ from: 'color' }}\n      fill={[{ match: { depth: 1 }, id: 'lines' }]}\n      animate={true}\n      motionStiffness={150}\n      motionDamping={25}\n      theme={{\n        labels: {\n          text: {\n            fontSize: 16,\n            fontFamily: ''\n          }\n        }\n      }}\n    />\n  </div>\n)\n\nexport default CirclePackingDiagram","import React from 'react'\nimport { ResponsiveBar } from '@nivo/bar'\n\nconst MyResponsiveBar = (props) => (\n  <div className='horizontal-bar-holder'>\n    <ResponsiveBar\n      data={props.data}\n      keys={['value']}\n      indexBy='course'\n      margin={{ top: 10, right: 60, bottom: 50, left: 170 }}\n      padding={0.15}\n      layout='horizontal'\n      colors={['#A6CEE3']}\n      borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\n      axisTop={null}\n      axisRight={null}\n      enableGridY={false}\n      axisBottom={{\n        tickSize: 8,\n        tickPadding: 3,\n        tickRotation: 0,\n        legend: 'Количество человек',\n        legendPosition: 'middle',\n        legendOffset: 42,\n        tickValues: 15\n      }}\n      axisLeft={{\n        tickSize: 0,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'Направления',\n        legendPosition: 'middle',\n        legendOffset: -150\n      }}\n      labelSkipWidth={12}\n      labelSkipHeight={12}\n      labelTextColor={{ from: 'color', modifiers: [['darker', '20']] }}\n      animate={true}\n      tooltip={({ value, indexValue }) => (\n        <div>\n          {indexValue}: <strong>{value}</strong>\n        </div>\n      )}\n      motionStiffness={90}\n      motionDamping={15}\n      theme={{\n        axis: {\n          legend: {\n            text: {\n              fontSize: 20,\n              fontFamily: ''\n            }\n          },\n          ticks: {\n            text:\n                        {\n                          fontSize: 14,\n                          fontFamily: ''\n                        }\n          }\n        },\n        labels: {\n          text: {\n            fontSize: 20,\n            fontFamily: ''\n          }\n        }\n      }}\n    />\n  </div>\n)\n\nexport default MyResponsiveBar","import React from 'react'\nimport { ResponsiveWaffle } from '@nivo/waffle'\n\nconst MyResponsiveWaffle = (props) => (\n  <div className='waffle-chart-holder'>\n    <ResponsiveWaffle\n      data={props.data}\n      total={420}\n      rows={15}\n      columns={28}\n      margin={{ top: 10, right: 30, bottom: 30, left: 30 }}\n      colors={['#FFFFCC', '#CCEBC5', '#B3CDE3', '#FBB4AE']}\n      borderColor={{ from: 'color', modifiers: [['darker', 0.3]] }}\n      animate={true}\n      motionStiffness={90}\n      motionDamping={11}\n    />\n  </div>\n)\nexport default MyResponsiveWaffle","import React from 'react'\nimport CirclePackingDiagram from '../components/CirclePackingDiagram'\nimport HorizontalBarChart from '../components/HorizontalBarChart'\nimport WaffleChart from '../components/WaffleChart'\nimport cpdData from '../assets/data/CirclePackingDiagram-data.json'\nimport hbcData from '../assets/data/HorizontalBarChart-data.json'\nimport wcData from '../assets/data/WaffleChart-data.json'\n\nconst CoursesDiagrams = () => {\n  return (\n    <div className='container'>\n      <h1>Диаграммы</h1>\n      <h2>Распределение проектов по направлениям</h2>\n      <CirclePackingDiagram data={cpdData} />\n      <div className='two-courses-diagrams'>\n        <div>\n          <h2>Распределение студентов по направлениям</h2>\n          <HorizontalBarChart data={hbcData} />\n        </div>\n        <div>\n          <h2>Количество записавшихся по времени</h2>\n          <WaffleChart data={wcData} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CoursesDiagrams\n","import React from 'react'\nimport CoursesIcons from './CoursesIcons'\nimport '../styles/CoursesButtonsRow.css'\nimport coursesData from '../assets/data/CoursesInfo.json'\n\nvar courses = []\n\nfor (var c in coursesData) courses.push(c)\n\nclass CoursesButtonsRow extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedCourse: courses[0]\n    }\n    this.onChangeValue = props.onChangeValue\n  }\n\n  handleClick(args) {\n    this.setState((/* state */) => ({\n      selectedCourse: args\n    }))\n    this.onChangeValue(args)\n  }\n\n  render() {\n    return (\n      <div className='buttons-row'>\n        {courses.map(course => (\n          <ButtonWithIcon course={course} key={course.toString()} parent={this} />\n        ))}\n      </div>\n    )\n  }\n}\n\nconst ButtonWithIcon = (props) => {\n  var className = props.parent.state.selectedCourse !== props.course\n    ? props.course : props.course + ' selected'\n  return (\n    <button className={className} onClick={props.parent.handleClick.bind(props.parent, props.course)}>\n      <CoursesIcons icon={props.course} />\n    </button>\n  )\n}\n\nexport default CoursesButtonsRow","import React from 'react'\nimport '../styles/ProjectCard.css'\n\nconst Card = (props) => {\n  return (\n    <a href={props.link} target='_blank' rel='noopener noreferrer'>\n      <div className='project-card'>\n        <h4>{props.title}</h4>\n        <p>{props.description}</p>\n      </div>\n    </a>\n  )\n}\n\nexport default Card","import React from 'react'\nimport '../styles/Boards.css'\nimport ProjectCard from './ProjectCard'\n\nconst Board = (props) => {\n  return (\n    <div className='projects-cards-board'>\n      {props.data.map(p => (\n        <ProjectCard\n          title={p.title}\n          description={p.description}\n          link={p.link}\n          key={p.title}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default Board","import React from 'react'\nimport CoursesButtonsRow from '../components/CoursesButtonsRow'\nimport ProjectsCardsBoard from '../components/ProjectsCardsBoard'\nimport Shuffle from '../components/ArrayShuffle'\nimport '../styles/CoursesDescription.css'\nimport coursesData from '../assets/data/CoursesInfo.json'\nimport projectsData from '../assets/data/ProjectsBoard-data.json'\n\nclass CoursesDescription extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedCourse: Object.keys(coursesData)[0]\n    }\n    this.onChangeValueHandler = (val) => {\n      this.setState({ selectedCourse: val })\n    }\n  }\n\n  render() {\n    return (\n      <div className='container' >\n        <h1>Направления</h1>\n        <div className='courseSelection'>\n          <CoursesButtonsRow onChangeValue={this.onChangeValueHandler} />\n        </div>\n        {courseInfo(coursesData[this.state.selectedCourse])}\n        <h2 style={{ textAlign: 'center', marginBottom: 0 }}>Проекты направления</h2>\n        <ProjectsCardsBoard data={Shuffle(projectsData[this.state.selectedCourse])}/>\n      </div>\n    )\n  }\n}\n\nexport default CoursesDescription\n\nfunction courseInfo(data) {\n  return (\n    <div className='course-description'>\n      <h2>{data.title}</h2>\n      <p>{data.description}</p>\n    </div>\n  )\n}","import React from 'react'\nimport icon1 from '../assets/competencies-icons/team.svg'\nimport icon2 from '../assets/competencies-icons/manager.svg'\nimport icon3 from '../assets/competencies-icons/analyst.svg'\nimport icon4 from '../assets/competencies-icons/developer.svg'\nimport icon8 from '../assets/competencies-icons/designer.svg'\nimport icon5 from '../assets/competencies-icons/artist.svg'\nimport icon6 from '../assets/competencies-icons/tester.svg'\nimport icon7 from '../assets/competencies-icons/explorer.svg'\nimport icon0 from '../assets/placeholder.svg'\nimport '../styles/index.css'\n\nconst CompetenciesIcons = (props) => {\n  switch (props.icon) {\n    case 'Команда':\n      return iconHolder(icon1)\n    case 'Менеджер':\n      return iconHolder(icon2)\n    case 'Аналитик':\n      return iconHolder(icon3)\n    case 'Исследователь':\n      return iconHolder(icon7)\n    case 'Разработчик':\n      return iconHolder(icon4)\n    case 'Дизайнер':\n      return iconHolder(icon8)\n    case 'Художник':\n      return iconHolder(icon5)\n    case 'Тестировщик':\n      return iconHolder(icon6)\n\n    default:\n      return iconHolder(icon0)\n  }\n}\n\nfunction iconHolder(icon) {\n  return (\n    <div className='icon-holder'>\n      <img alt='icon' src={icon}></img>\n    </div>\n  )\n}\n\nexport default CompetenciesIcons","import React from 'react'\nimport CompetenciesIcons from './CompetenciesIcons'\nimport '../styles/CoursesButtonsRow.css'\nimport competenciesData from '../assets/data/CompetenciesGraph-data.json'\n\nvar keys = []\n\nfor (var c in competenciesData) keys.push(c)\n\nclass CompetenciesButtonsRow extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selected: keys[0]\n    }\n    this.onChangeValue = props.onChangeValue\n  }\n\n  handleClick(args) {\n    this.setState((/* state */) => ({\n      selected: args\n    }))\n    this.onChangeValue(args)\n  }\n\n  render() {\n    return (\n      <div className='buttons-row'>\n        {keys.map(k => (\n          <ButtonWithIcon selectedItem={k} key={k.toString()} parent={this} />\n        ))}\n      </div>\n    )\n  }\n}\n\nconst ButtonWithIcon = (props) => {\n  var className = props.parent.state.selected !== props.selectedItem\n    ? props.selectedItem : props.selectedItem + ' selected'\n  return (\n    <button className={className} onClick={props.parent.handleClick.bind(props.parent, props.selectedItem)}>\n      <CompetenciesIcons icon={props.selectedItem} />\n    </button>\n  )\n}\n\nexport default CompetenciesButtonsRow","import React from 'react'\nimport Graph from 'react-graph-vis'\nimport '../styles/CuratorsGraph.css'\nimport '../styles/Diagrams.css'\n\nclass CompetenciesGraph extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      network: null\n    }\n    this.graph = props.data\n    this.options = {\n      layout: {\n        hierarchical: false\n      },\n      autoResize: true,\n      nodes: {\n        font: { face: 'Bahnschrift' },\n        shape: 'text',\n        scaling: {\n          label: {\n            enabled: true,\n            min: 8,\n            max: 20\n          }\n        },\n        borderWidth: 0,\n        chosen: {\n          node: function(values /*, id, selected, hovering */) {\n            values.borderColor = values.color\n            values.borderWidth = 2\n          }\n        }\n      },\n      edges: {\n        arrows: { from: false, middle: false, to: false },\n        smooth: {\n          enabled: true,\n          type: 'continuous'\n        },\n        color: { opacity: 0.5 },\n        chosen: {\n          edge: function(values /*, id, selected, hovering */) {\n            values.opacity = 1\n          }\n        }\n      },\n      interaction: {\n        hover: true\n      },\n      physics: {\n        enabled: true,\n        forceAtlas2Based: {\n          gravitationalConstant: -100,\n          centralGravity: 0.05,\n          springConstant: 0,\n          springLength: 100,\n          damping: 1,\n          avoidOverlap: 1\n        },\n        solver: 'forceAtlas2Based',\n        stabilization: {\n          enabled: true,\n          iterations: 1000,\n          updateInterval: 100,\n          onlyDynamicEdges: false,\n          fit: true\n        }\n      }\n    }\n\n    this.events = {\n      /* select: function(event) {\n        var { nodes, edges } = event;\n      } */\n    }\n  }\n\n  componentDidUpdate() {\n    this.state.network.setData(this.props.data)\n  }\n\n  handleNetworkChange(param) {\n    this.setState(() => ({\n      network: param\n    }))\n  }\n\n  render() {\n    return (\n      <div className='competencies-graph-holder'>\n        <Graph\n          graph={this.graph}\n          options={this.options}\n          events={this.events}\n          getNetwork={network => {\n            this.handleNetworkChange(network)\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default CompetenciesGraph\n","import React from 'react'\nimport CompetenciesButtonsRow from '../components/CompetenciesButtonsRow'\nimport CompetenciesGraph from '../components/CompetenciesGraph.js'\nimport competenciesData from '../assets/data/CompetenciesGraph-data.json'\n\n// Create Graph Data\nvar groupKeys = Object.keys(competenciesData)\nvar data = {}\ngroupKeys.forEach(groupKey => {\n  var graph = {\n    nodes: [],\n    edges: []\n  }\n  graph.nodes.push({\n    id: 0,\n    shape: 'circle',\n    label: groupKey\n  })\n\n  for (let i = 1; i <= competenciesData[groupKey].length; i++) {\n    const element = competenciesData[groupKey][i - 1]\n    graph.nodes.push({\n      id: i,\n      label: element.label,\n      title: 'Кол-во упоминаний: ' + element.value,\n      value: element.value\n    })\n    graph.edges.push({\n      from: 0,\n      to: i\n    })\n  }\n  data[groupKey] = graph\n})\n\nclass Сompetencies extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selected: groupKeys[0]\n    }\n    this.onChangeValueHandler = val => {\n      this.setState({ selected: val })\n    }\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <h1>Компетенции</h1>\n        <div className='competenciesSelection'>\n          <CompetenciesButtonsRow onChangeValue={this.onChangeValueHandler} />\n        </div>\n        {courseInfo(this.state.selected)}\n      </div>\n    )\n  }\n}\n\nexport default Сompetencies\n\nfunction courseInfo(selectedKey) {\n  var text = 'Компетентностный профиль ' + selectedKey\n  return (\n    <div className='competence-graph'>\n      <h2>{text}</h2>\n      <CompetenciesGraph data={data[selectedKey]} />\n    </div>\n  )\n}\n","import React from 'react'\nimport { ResponsiveRadar } from '@nivo/radar'\nimport '../styles/Diagrams.css'\n\nconst MyResponsiveRadar = (props) => (\n  <div className='radar-diagram-holder'>\n    <ResponsiveRadar\n      data={props.data}\n      keys={props.dataKeys}\n      indexBy='measure'\n      maxValue={props.maxValue}\n      margin={{ top: 70, right: 80, bottom: 40, left: 80 }}\n      curve='linearClosed'\n      borderWidth={2}\n      borderColor={{ from: 'color' }}\n      gridLevels={props.levels}\n      gridShape='linear'\n      gridLabelOffset={16}\n      enableDots={true}\n      dotSize={10}\n      dotColor={{ theme: 'background' }}\n      dotBorderWidth={2}\n      dotBorderColor={{ from: 'color' }}\n      enableDotLabel={true}\n      dotLabel='value'\n      dotLabelYOffset={4}\n      colors={{ scheme: 'paired' }}\n      fillOpacity={0.25}\n      blendMode='normal'\n      animate={true}\n      motionStiffness={90}\n      motionDamping={15}\n      isInteractive={true}\n      theme={{\n        axis: {\n          ticks: {\n            text: {\n              fontSize: props.labelsFontSize,\n              fontFamily: ''\n            }\n          }\n        },\n        dots: {\n          text: {\n            fontSize: 16,\n            fontFamily: ''\n          }\n        },\n        grid: {\n          line: {\n            stroke: 'rgba(0, 0, 0, .1)'\n          },\n          stroke: 'rgba(0, 0, 0, .2)',\n          strokeWidth: 1\n        }\n      }}\n    />\n  </div>\n)\n\nexport default MyResponsiveRadar","function dataPreparation(data) {\n  var allKeys = Object.keys(data)\n  var newData = {}\n  allKeys.forEach(key => {\n    const array = []\n    var measures = Object.keys(data[key])\n    measures.forEach(measure => {\n      array.push({\n        measure: measure,\n        [key]: data[key][measure]\n      })\n    })\n    newData[key] = array\n  })\n  return newData\n}\n\nexport default dataPreparation","import React from 'react'\nimport RadarDiagram from '../components/RadarDiagram'\nimport data from '../assets/data/PrePresentationRadarDiagram.json'\nimport DataPreparation from '../components/RadarDataPreparation'\nimport '../styles/PrePresentation.css'\n\nvar allKeys = Object.keys(data).slice(1)\nvar newData = DataPreparation(data)\n\nconst PrePresentation = () => {\n  return (\n    <div className='prepres-container'>\n      <h1>Предзащиты</h1>\n      <h2>Итоги по всем трекам</h2>\n      <RadarDiagram data={newData['Общее среднее']} dataKeys={['Общее среднее']} labelsFontSize={18} maxValue={3} levels={3} />\n      <div className='prepres-diagrams-holder'>\n        {\n          allKeys.map(k => (\n            <div className='item' key={k}>\n              <h3>{k}</h3>\n              <RadarDiagram data={newData[k]} dataKeys={[k]} labelsFontSize={12} maxValue={3} levels={3} />\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default PrePresentation\n","import React from 'react'\nimport RadarDiagram from '../components/RadarDiagram'\nimport data from '../assets/data/PresentationRadar-data.json'\nimport expertsData from '../assets/data/Experts-data.json'\nimport DataPreparation from '../components/RadarDataPreparation'\nimport '../styles/Presentation.css'\n\nvar allKeys = Object.keys(data).slice(1)\nvar newData = DataPreparation(data)\n\nconst Presentation = () => {\n  return (\n    <div className='prepres-container'>\n      <h1>Защиты</h1>\n      <h2>Средний результат</h2>\n      <div className='pres-main-diagram'>\n        <RadarDiagram\n          data={newData['Общее среднее']}\n          dataKeys={['Общее среднее']}\n          labelsFontSize={18}\n          maxValue={3}\n          levels={3}\n        />\n      </div>\n      <h2>Итоги по всем трекам</h2>\n      <div className='prepres-diagrams-holder'>\n        {allKeys.map(k => (\n          <div className='item' key={k}>\n            <h3>{k}</h3>\n            <RadarDiagram\n              data={newData[k]}\n              dataKeys={[k]}\n              labelsFontSize={12}\n              maxValue={3}\n              levels={3}\n            />\n            <div className='experts'>\n              <b>Эксперты:</b> <br />\n              {expertsData[k].map(e => (\n                <div key={e}>{e}</div>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Presentation\n","import React from 'react'\nimport RadarDiagram from '../components/RadarDiagram'\nimport radarData from '../assets/data/TeamsResults-data.json'\nimport teamsInfo from '../assets/data/TeamsResultsInfo.json'\nimport DataPreparation from '../components/RadarDataPreparation'\nimport '../styles/Presentation.css'\n\nvar allKeys = []\nallKeys.push(Object.keys(radarData)[0])\nallKeys = allKeys.concat(Object.keys(radarData).slice(1).sort())\nvar newData = DataPreparation(radarData)\n\nclass Presentation extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { value: ['Общее среднее'] }\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(event) {\n    this.setState({ value: [event.target.value] })\n  }\n\n  render() {\n    return (\n      <div className='pres-container'>\n        <h1>Оценки команд</h1>\n        <div className='team-section'>\n          <div className='select-section'>\n            <select\n              value={this.state.value}\n              onChange={this.handleChange}\n              multiple\n            >\n              {allKeys.map(team => (\n                <option value={team} key={team}>\n                  {team}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className='diagram-section'>\n            <h2>{this.state.value[0]}</h2>\n            <div className='team-radar-diagram'>\n              <RadarDiagram\n                data={newData[this.state.value[0]]}\n                dataKeys={this.state.value}\n                labelsFontSize={16}\n                maxValue={3}\n                levels={3}\n              />\n            </div>\n            {this.state.value[0] !== allKeys[0] &&\n              teamInfo(this.state.value[0])}\n            {this.state.value[0] === allKeys[0] &&\n              generalInfo(this.state.value[0])}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Presentation\n\nfunction teamInfo(selectedTeam) {\n  const item = teamsInfo[selectedTeam]\n  return (\n    <div className='team-results-info'>\n      <h3>Информация о команде</h3>\n      <p>\n        Средний балл команды: {item.score}\n        <br />\n        Проект: {item.project}\n        <br />\n        Трек: {item.track}\n        <br />\n        Куратор: {item.curator}\n        <br />\n        Количество участников: {item.members_count}\n      </p>\n    </div>\n  )\n}\n\nfunction generalInfo(key) {\n  const item = teamsInfo[key]\n  return (\n    <div className='team-results-info'>\n      <h3>Информация</h3>\n      <p>\n        Средний итоговый балл: {item.score}\n        <br />\n        Всего проектов: {item.projects_count}\n        <br />\n        Количество направлений: {item.courses_count}\n        <br />\n        Количество кураторов: {item.curators_count}\n        <br />\n        Количество команд: {item.teams_count}\n      </p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { ResponsiveSwarmPlot } from '@nivo/swarmplot'\nimport '../styles/Diagrams.css'\n\nconst MyResponsiveSwarmPlot = props => (\n  <div className='swarm-plot-diagram-holder'>\n    <ResponsiveSwarmPlot\n      data={props.data}\n      groups={props.groups}\n      value='value'\n      colors={{ scheme: 'spectral' }}\n      valueScale={{ type: 'linear', min: 0, max: 100, reverse: false }}\n      size={{ key: 'size', values: [1, 10], sizes: [10, 35] }}\n      forceStrength={0.5}\n      spacing={2}\n      gap={20}\n      enableGridX={false}\n      simulationIterations={100}\n      borderColor={{\n        from: 'color',\n        modifiers: [\n          ['darker', 0.6],\n          ['opacity', 0.5]\n        ]\n      }}\n      axisTop={null}\n      axisRight={null}\n      axisBottom={{\n        orient: 'bottom',\n        tickSize: 0,\n        tickPadding: 10,\n        tickRotation: 0,\n        legend: 'Направления',\n        legendPosition: 'middle',\n        legendOffset: 50\n      }}\n      axisLeft={{\n        orient: 'left',\n        tickSize: 10,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'Баллы',\n        legendPosition: 'middle',\n        legendOffset: -60\n      }}\n      margin={{ top: 20, right: 100, bottom: 80, left: 100 }}\n      motionStiffness={50}\n      motionDamping={10}\n      tooltip={({ node }) => {\n        return (\n          <div\n            style={{\n              background: 'white',\n              padding: '5px 9px',\n              borderRadius: '2px',\n              display: 'flex-inline',\n              alignItems: 'center',\n              justifyContent: 'center',\n              flexDirection: 'column',\n              color: 'black',\n              boxShadow: 'rgba(0, 0, 0, 0.25) 0px 1px 2px'\n            }}\n          >\n            Команда: <b>{node.data.team_name}</b>\n            <br />\n            Участники: <b>{node.data.size}</b>\n            <br />\n            Итоговый балл: <b>{node.data.value}</b>\n          </div>\n        )\n      }}\n      theme={{\n        axis: {\n          legend: {\n            text: {\n              fontSize: 20,\n              fontFamily: ''\n            }\n          },\n          ticks: {\n            text: {\n              fontSize: 14,\n              fontFamily: ''\n            }\n          }\n        },\n        labels: {\n          text: {\n            fontSize: 20,\n            fontFamily: ''\n          }\n        },\n        grid: {\n          line: {\n            stroke: 'rgba(0, 0, 0, .1)',\n            strokeDasharray: 12\n          }\n        }\n      }}\n    />\n  </div>\n)\n\nexport default MyResponsiveSwarmPlot\n","import React from 'react'\nimport SwarmPlot from '../components/SwarmPlot'\nimport sourceData from '../assets/data/CoursesResults-data.json'\n\nvar allKeys = Object.keys(sourceData)\nvar newData = []\nlet index = 0\nallKeys.forEach(courseId => {\n  var teamsKeys = Object.keys(sourceData[courseId])\n  teamsKeys.forEach(teamId => {\n    index += 1\n    const team = sourceData[courseId][teamId]\n    const item = {\n      id: index.toString(),\n      group: courseId,\n      team_name: teamId,\n      value: team.score,\n      size: team.members\n    }\n    newData.push(item)\n  })\n})\n\nconst CoursesResults = () => {\n  return (\n    <div className='corses-results'>\n      <h1>Распределение баллов по направлениям</h1>\n      <SwarmPlot data={newData} groups={allKeys} />\n    </div>\n  )\n}\n\nexport default CoursesResults\n","import React, { Component } from 'react'\nimport Navbar from './components/Navbar'\nimport Home from './pages/Home'\nimport Chronology from './pages/Chronology'\nimport Students from './pages/Students'\nimport Curators from './pages/Curators'\nimport Customers from './pages/Customers'\nimport CoursesDiagrams from './pages/CoursesDiagrams'\nimport CoursesDescription from './pages/CoursesDescription'\nimport Сompetencies from './pages/Сompetencies'\nimport PrePresentation from './pages/PrePresentation'\nimport Presentation from './pages/Presentation'\nimport TeamsResults from './pages/TeamsResults'\nimport CoursesResults from './pages/CoursesResults'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/chronology' component={Chronology} />\n            <Route path='/students' component={Students} />\n            <Route path='/curators' component={Curators} />\n            <Route path='/customers' component={Customers} />\n            <Route path='/courses-description' component={CoursesDescription} />\n            <Route path='/courses-diagrams' component={CoursesDiagrams} />\n            <Route path='/pre-presentation' component={PrePresentation} />\n            <Route path='/competencies' component={Сompetencies} />\n            <Route path='/presentation' component={Presentation} />\n            <Route path='/teams-results' component={TeamsResults} />\n            <Route path='/courses-results' component={CoursesResults} />\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.css'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}